# the iris dataset is already built-in Rstudio
data(iris)

# I give a name to each variable so it is easier to do the graphs
PL <- iris$Petal.Length
PW <- iris$Petal.Width
SL <- iris$Sepal.Length
SW <- iris$Sepal.Width

# Exercise 1
# to do a scatterplot of each species I have to recall them and give them a name
virginica <- iris[iris$Sps=="virginica",]
setosa <- iris[iris$Sps=="setosa",]
versicolor <- iris[iris$Sps=="versicolor",]


# Now I can do a framework with both the scatterplot
par(mfrow=c(1,2))
# now I can do a scatterplot comparing the length and the width of the petal, giving each species a different color

plot(PL, PW, col=iris$Species,      # I use the function plot() specifing that I want to see the the petal data using $
main="Petal length vs width",        # I give the name to the plot
xlab="Petal Length",                  # I decide that x is the width
ylab="Petal Width",                 # I decide that y is the length
pch=19)

# now I want to add the legend, specifing which species is which color
legend(x="topleft",legend = c('setosa','versicolor','virginica'),  # I use the function legend()
  col = unique(iris$Species), pch = 10, cex=0.5,) # I specify the colors and the size of the legend

# Now I do the scatterplot comparing the length and the width of the sepal, adding the legend
plot(SL, SW, col=iris$Species,      # I use the function plot() specifing that I want to see the the petal data using $
main="Sepal length vs width",        # I give the name to the plot
xlab="Sepal Length",                  # I decide that x is the length
ylab="Sepal Width",                 # I decide that y is the width
pch=19)

legend(x="topleft",legend = c('setosa','versicolor','virginica'),  # I use the function legend()
  col = unique(iris$Species), pch = 19, cex=0.5,)



# exercise 2
# To do a linear regression I have to use the function lm()
par(mfrow=c(1,2))

lm(Petal.Width ~ Petal.Length, data=iris)$coefficients    # It gives me the results of the equation ???? capisci meglio

plot(PL, PW,       # I plot again the graph without the colors
main="Petal length vs width",        
xlab="Petal Length",                  
ylab="Petal Width",                 
pch=19)

# And I add the line resulted by the linear regression
abline(lm(Petal.Width ~ Petal.Length, data=iris)$coefficients, col="black", lty=1, lwd=2)


# I do the same thing with the linear regression of the sepal

lm(Sepal.Width ~ Sepal.Length, data=iris)$coefficients

plot(SL, SW,     
main="Sepal length vs width",       
xlab="Sepal Length",                  
ylab="Sepal Width",      
pch=19)

abline(lm(Sepal.Width ~ Sepal.Length, data=iris)$coefficients, col="black", lty=1, lwd=2)

# Exercise 3

# I do the nromality test of the two variables with the shapiro test

shapiro.test(PW)

shapiro.test(SW)

# I build an histogram for sepal width
par(mfrow=c(1,2)) 

hist(SW, freq=FALSE, main="Histogram of Sepal Width",   # I use the function 'hist' to generate an histogramm, and the option freq=FALSE to plot probability densities instead of frequencies. 
xlab="Sepal Width",
col="yellow")

# now I create and put the density line on the plot

lines(density(SW), col="tomato3", lwd=2)

# I do the same with petal width

hist(PW, freq=FALSE, main="Histogram of Petal Width", 
xlab="Petal Width",
col="cadetblue1")

lines(density(PW), col="tomato3", lwd=2)

# Exercise 4
# hierarchical clustering of the iris dataset applying the 'complete' method

# i want to see all the iris dataset
data(iris)

# I have to remove the column with the list of the species because it contains categories and they cannot be calculated in the distances
iris_data <- iris[, -5]

# I calculate the matrix after scaling the data
iris_dist <- dist(scale(iris_data))

# I apply the hierarchial clustering of the data with the complete method
iris_hc <- hclust(iris_dist)

# Then I can do a plot of the dendogram
plot(iris_hc, main = "Hierarchical clustering dendogram", xlab = "", sub = "", cex = 0.8)

# Now I can compare the cluster to each species
# I divide the dendogram in 3 clusters
clusters <- cutree(iris_hc, k = 3)

# I add the groups to the original dataset
iris$Cluster <- clusters

# Finally I can compare them
contingency_table <- table(iris$Cluster, iris$Species)
print(contingency_table)

# Now I reuse the graph to give a graphic rappresentation of the clusters
# Scatterplot con colori per i cluster
plot(PL, PW, 
     col = clusters, 
     pch = 19, 
     main = "Cluster vs Width and Length of the Petal",
     xlab = "Petal Length", 
     ylab = "Petal Width")

# I add the legend
legend("topleft", legend = unique(clusters), 
       col = unique(clusters), 
       pch = 19, 
       title = "Cluster")

